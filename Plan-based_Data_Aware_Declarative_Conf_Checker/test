#!/bin/bash

# Path to the base directory where the logs and constraints are stored
BASE_DIR="/path/to/base/dir"

# Paths to external libraries (from the Eclipse .classpath file)
LIBRARY_PATHS=(
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/DeclareVisualizer.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/guava-16.0.1.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/OpenXES.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/OpenXES-XStream.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/java-cup-11b.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/LTL2Automaton.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/lpsolve55j.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/javailp-1.2a.jar"
    "/Users/applem2/Downloads/TESI/Project/Aligner/Plan-based_Data_Aware_Declarative_Conf_Checker/lib/gs-core-2.0.jar"
)

# Join compiled class path with library paths
COMPILED_CLASSES_PATH="/Users/applem2/Downloads/TESI/Project/Aligner/out/production/Aligner"
CLASSPATH="$COMPILED_CLASSES_PATH:$(IFS=:; echo "${LIBRARY_PATHS[*]}")"

# Find log directories dynamically
LOG_DIRS=($(find "$BASE_DIR" -type d -name "*_alphabet"))

# Base constraint directory
CONSTRAINTS_DIR="$BASE_DIR"

PLANNERS=("fd" "symba")

# Loop over planners
for PLANNER in "${PLANNERS[@]}"; do
    # Loop over found log directories
    for LOG_DIR in "${LOG_DIRS[@]}"; do
        ALPHABET=$(basename "$LOG_DIR" | cut -d'_' -f1)
        for CONSTRAINT_DIR in $(find "$LOG_DIR" -type d -name "*_constraints"); do
            NUM_CONSTRAINTS=$(basename "$CONSTRAINT_DIR" | cut -d'_' -f1)
            CONSTRAINT_FILE="${NUM_CONSTRAINTS}_constraints.dot"
            CONSTRAINT_PATH="${CONSTRAINT_DIR}/${CONSTRAINT_FILE}"

            if [[ -f "$CONSTRAINT_PATH" ]]; then
                # Find log files matching the pattern
                LOG_FILES=($(find "$CONSTRAINT_DIR" -type f -name "*${ALPHABET}_*_${NUM_CONSTRAINTS}*.xes"))

                for LOG in "${LOG_FILES[@]}"; do
                    if [[ "$LOG" =~ ([0-9]+)_([0-9]+)_([0-9]+)_(.*)\.xes ]]; then
                        TRACE_LENGTH="${BASH_REMATCH[1]}"
                        NOISE="${BASH_REMATCH[2]}"
                        TRACE_ALPHABET="${BASH_REMATCH[3]}"
                        FILE_SUFFIX="${BASH_REMATCH[4]}"

                        echo -e "##### RUNNING WITH:\nPlanner: $PLANNER\nTrace Length: $TRACE_LENGTH\nNoise: $NOISE%\nTrace Alphabet: $TRACE_ALPHABET\nConstraints: $NUM_CONSTRAINTS"

                        java -cp "$CLASSPATH" main.Main "$PLANNER" "$LOG" "$CONSTRAINT_PATH"

                        echo "####################################"
                        echo ""
                    else
                        echo "Skipping invalid log file: $LOG"
                    fi
                done
            else
                echo "Skipping combination: No matching constraint file for $CONSTRAINT_PATH"
            fi
        done
    done
done
